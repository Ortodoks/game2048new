/**
 * Auto-Update System for Telegram Mini App
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

const VERSION_CONFIG = {
    current: '1.3.0', // –ì–õ–ê–í–ù–ê–Ø –í–ï–†–°–ò–Ø - –æ–±–Ω–æ–≤–ª—è–π –ø—Ä–∏ –¥–µ–ø–ª–æ–µ!
    checkInterval: 30000, // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    apiEndpoint: '/version.json', // –§–∞–π–ª —Å –≤–µ—Ä—Å–∏–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    forceReload: true // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
};

class AppVersionManager {
    constructor() {
        this.currentVersion = VERSION_CONFIG.current;
        this.lastCheck = null;
        this.updateAvailable = false;
        this.initialized = false;
        
        this.init();
    }
    
    init() {
        console.log('üîß Version Manager initialized. Current version:', this.currentVersion);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ localStorage
        const savedVersion = localStorage.getItem('app_version');
        
        if (savedVersion && savedVersion !== this.currentVersion) {
            console.log('üÜï New version detected!', {
                old: savedVersion,
                new: this.currentVersion
            });
            this.handleVersionUpdate(savedVersion);
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
        localStorage.setItem('app_version', this.currentVersion);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        this.startVersionCheck();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        this.setupFocusCheck();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ Telegram Web App —Å–æ–±—ã—Ç–∏—è
        this.setupTelegramCheck();
        
        this.initialized = true;
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏
     */
    handleVersionUpdate(oldVersion) {
        console.log('üîÑ Handling version update from', oldVersion, 'to', this.currentVersion);
        
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏
        this.clearAllCaches();
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        this.migrateData(oldVersion, this.currentVersion);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        this.showUpdateNotification();
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π
     */
    async clearAllCaches() {
        console.log('üóëÔ∏è Clearing all caches...');
        
        try {
            // 1. Service Worker caches
            if ('caches' in window) {
                const cacheNames = await caches.keys();
                await Promise.all(
                    cacheNames.map(cacheName => {
                        console.log('  - Deleting cache:', cacheName);
                        return caches.delete(cacheName);
                    })
                );
            }
            
            // 2. –û—á–∏—â–∞–µ–º Application Cache (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π API, –Ω–æ –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è)
            if (window.applicationCache) {
                try {
                    window.applicationCache.update();
                } catch (e) {
                    console.log('  - Application cache not available');
                }
            }
            
            console.log('‚úÖ All caches cleared successfully');
        } catch (error) {
            console.error('‚ùå Error clearing caches:', error);
        }
    }
    
    /**
     * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –≤–µ—Ä—Å–∏—è–º–∏
     */
    migrateData(oldVersion, newVersion) {
        console.log('üì¶ Migrating data from', oldVersion, 'to', newVersion);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ localStorage –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
        
        // –ü—Ä–∏–º–µ—Ä: –µ—Å–ª–∏ –≤–µ—Ä—Å–∏—è —Å—Ç–∞—Ä—à–µ 1.2.0, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        if (this.compareVersions(oldVersion, '1.2.0') < 0) {
            console.log('  - Migrating old data structure...');
            // –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        }
        
        console.log('‚úÖ Data migration completed');
    }
    
    /**
     * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1, 0, 1)
     */
    compareVersions(v1, v2) {
        const parts1 = v1.split('.').map(Number);
        const parts2 = v2.split('.').map(Number);
        
        for (let i = 0; i < 3; i++) {
            if (parts1[i] > parts2[i]) return 1;
            if (parts1[i] < parts2[i]) return -1;
        }
        return 0;
    }
    
    /**
     * –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
     */
    startVersionCheck() {
        // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        setTimeout(() => this.checkForUpdates(), 5000);
        
        // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏
        setInterval(() => {
            this.checkForUpdates();
        }, VERSION_CONFIG.checkInterval);
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
     */
    async checkForUpdates() {
        try {
            // –î–æ–±–∞–≤–ª—è–µ–º timestamp —á—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞
            const timestamp = Date.now();
            const response = await fetch(`${VERSION_CONFIG.apiEndpoint}?t=${timestamp}`, {
                cache: 'no-store',
                headers: {
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache'
                }
            });
            
            if (!response.ok) {
                console.log('‚ö†Ô∏è Version check failed:', response.status);
                return;
            }
            
            const data = await response.json();
            const serverVersion = data.version;
            
            this.lastCheck = new Date();
            
            if (serverVersion !== this.currentVersion) {
                console.log('üÜï Server has new version:', serverVersion);
                this.updateAvailable = true;
                this.promptUpdate(serverVersion);
            } else {
                console.log('‚úÖ App is up to date:', this.currentVersion);
            }
        } catch (error) {
            // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
            if (error.message.includes('404')) {
                console.log('‚ÑπÔ∏è Version check file not found (expected in development)');
            } else {
                console.error('‚ùå Error checking for updates:', error);
            }
        }
    }
    
    /**
     * –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
     */
    promptUpdate(newVersion) {
        if (VERSION_CONFIG.forceReload) {
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            console.log('üîÑ Force reloading application...');
            this.showUpdateNotification(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ –≤–µ—Ä—Å–∏–∏ ${newVersion}...`);
            
            setTimeout(() => {
                // –û—á–∏—â–∞–µ–º –∫—ç—à –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º
                this.clearAllCaches().then(() => {
                    window.location.reload(true); // true = hard reload
                });
            }, 1000);
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            this.showUpdateDialog(newVersion);
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    showUpdateDialog(newVersion) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–∏ –º—ã —É–∂–µ –¥–∏–∞–ª–æ–≥
        if (document.getElementById('update-dialog')) {
            return;
        }
        
        const dialog = document.createElement('div');
        dialog.id = 'update-dialog';
        dialog.innerHTML = `
            <div style="
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background: rgba(28, 28, 30, 0.95);
                backdrop-filter: blur(20px);
                border-radius: 20px;
                padding: 24px;
                max-width: 320px;
                width: 90%;
                z-index: 99999;
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
                animation: slideUp 0.3s ease-out;
            ">
                <h3 style="
                    color: #fff;
                    font-size: 20px;
                    font-weight: 600;
                    margin: 0 0 12px 0;
                    text-align: center;
                ">üéâ –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!</h3>
                <p style="
                    color: #8E8E93;
                    font-size: 14px;
                    margin: 0 0 20px 0;
                    text-align: center;
                ">
                    –í–µ—Ä—Å–∏—è ${newVersion} —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞.<br>
                    –û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.
                </p>
                <button id="update-now-btn" style="
                    width: 100%;
                    background: linear-gradient(135deg, #0A84FF, #0066CC);
                    color: white;
                    border: none;
                    border-radius: 12px;
                    padding: 14px;
                    font-size: 16px;
                    font-weight: 600;
                    cursor: pointer;
                    margin-bottom: 8px;
                ">
                    –û–±–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å
                </button>
                <button id="update-later-btn" style="
                    width: 100%;
                    background: transparent;
                    color: #8E8E93;
                    border: none;
                    border-radius: 12px;
                    padding: 12px;
                    font-size: 14px;
                    cursor: pointer;
                ">
                    –ü–æ–∑–∂–µ
                </button>
            </div>
            <style>
                @keyframes slideUp {
                    from {
                        transform: translate(-50%, -40%);
                        opacity: 0;
                    }
                    to {
                        transform: translate(-50%, -50%);
                        opacity: 1;
                    }
                }
            </style>
        `;
        
        document.body.appendChild(dialog);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        document.getElementById('update-now-btn').addEventListener('click', () => {
            dialog.remove();
            this.clearAllCaches().then(() => {
                window.location.reload(true);
            });
        });
        
        document.getElementById('update-later-btn').addEventListener('click', () => {
            dialog.remove();
        });
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
     */
    showUpdateNotification(message = '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è...') {
        const notification = document.createElement('div');
        notification.id = 'update-notification';
        notification.innerHTML = `
            <div style="
                position: fixed;
                top: 20px;
                left: 50%;
                transform: translateX(-50%);
                background: rgba(28, 28, 30, 0.95);
                backdrop-filter: blur(20px);
                color: white;
                padding: 12px 24px;
                border-radius: 12px;
                font-size: 14px;
                font-weight: 500;
                z-index: 99999;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
                animation: fadeInDown 0.3s ease-out;
            ">
                ${message}
            </div>
            <style>
                @keyframes fadeInDown {
                    from {
                        opacity: 0;
                        transform: translate(-50%, -20px);
                    }
                    to {
                        opacity: 1;
                        transform: translate(-50%, 0);
                    }
                }
            </style>
        `;
        document.body.appendChild(notification);
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
     */
    setupFocusCheck() {
        let hidden, visibilityChange;
        
        if (typeof document.hidden !== 'undefined') {
            hidden = 'hidden';
            visibilityChange = 'visibilitychange';
        } else if (typeof document.webkitHidden !== 'undefined') {
            hidden = 'webkitHidden';
            visibilityChange = 'webkitvisibilitychange';
        }
        
        if (visibilityChange) {
            document.addEventListener(visibilityChange, () => {
                if (!document[hidden]) {
                    console.log('üëÄ App focused, checking for updates...');
                    this.checkForUpdates();
                }
            });
        }
        
        // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ window.focus
        window.addEventListener('focus', () => {
            console.log('üëÄ Window focused, checking for updates...');
            this.checkForUpdates();
        });
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Telegram Web App —Å–æ–±—ã—Ç–∏—è
     */
    setupTelegramCheck() {
        if (window.Telegram?.WebApp) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–æ–∫–∞–∑–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            window.addEventListener('focus', () => {
                if (window.Telegram.WebApp.isExpanded) {
                    this.checkForUpdates();
                }
            });
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏
     */
    getVersionInfo() {
        return {
            current: this.currentVersion,
            lastCheck: this.lastCheck,
            updateAvailable: this.updateAvailable,
            initialized: this.initialized
        };
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤–µ—Ä—Å–∏–π
if (typeof window !== 'undefined') {
    window.appVersionManager = new AppVersionManager();
    
    // –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    window.checkAppVersion = () => {
        const info = window.appVersionManager.getVersionInfo();
        console.log('üì± App Version Info:', info);
        return info;
    };
}
